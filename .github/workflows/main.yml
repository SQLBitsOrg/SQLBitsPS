on:
  push:
    branches:
    - main
    paths-ignore:
    - CHANGELOG.md
    tags:
    - v*
env:
  buildFolderName: output
  buildArtifactName: output
  testResultFolderName: testResults
jobs:
  Build_Stage_Package_Module:
    name: Package Module
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.11
      with:
        versionSpec: 5.x
    - name: Evaluate Next Version
      uses: gittools/actions/gitversion/execute@v0.9.11
      with:
        configFilePath: GitVersion.yml
    - name: Build & Package Module
      shell: powershell
      run: |
        ./build.ps1 -ResolveDependency -tasks pack
      env:
        ModuleVersion: ${{ env.gitVersion.NuGetVersionV2 }}
    - name: Publish Build Artifact
      uses: actions/upload-artifact@v2
      with:
        path: ${{ env.buildFolderName }}/
  Test_Stage_test_linux:
    name: Linux
    runs-on: ubuntu-latest
    needs:
    - Build_Stage_Package_Module
    steps:
    - uses: actions/checkout@v2
    - name: Download Build Artifact
      uses: actions/download-artifact@v2
    - name: Run Tests
      shell: pwsh
      run: |
        ./build.ps1 -tasks test
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        nunit_files: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/NUnit*.xml
    - name: Publish Test Artifact
      uses: actions/upload-artifact@v2
      with:
        path: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/
        name: CodeCoverageLinux
  Test_Stage_test_windows_core:
    name: Windows (PowerShell)
    runs-on: windows-2019
    needs:
    - Build_Stage_Package_Module
    steps:
    - uses: actions/checkout@v2
    - name: Download Build Artifact
      uses: actions/download-artifact@v2
    - name: Run Tests
      shell: pwsh
      run: |
        ./build.ps1 -tasks test
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        nunit_files: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/NUnit*.xml
    - name: Publish Test Artifact
      uses: actions/upload-artifact@v2
      with:
        path: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/
        name: CodeCoverageWinPS7
  Test_Stage_test_windows_ps:
    name: Windows (Windows PowerShell)
    runs-on: windows-2019
    needs:
    - Build_Stage_Package_Module
    steps:
    - uses: actions/checkout@v2
    - name: Download Build Artifact
      uses: actions/download-artifact@v2
    - name: Run Tests
      shell: powershell
      run: |
        ./build.ps1 -tasks test
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        nunit_files: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/NUnit*.xml
    - name: Publish Test Artifact
      uses: actions/upload-artifact@v2
      with:
        path: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/
        name: CodeCoverageWinPS51
  Test_Stage_test_macos:
    name: macOS
    runs-on: macos-latest
    needs:
    - Build_Stage_Package_Module
    steps:
    - uses: actions/checkout@v2
    - name: Download Build Artifact
      uses: actions/download-artifact@v2
    - name: Run Tests
      shell: pwsh
      run: |
        ./build.ps1 -tasks test
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        nunit_files: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/NUnit*.xml
    - name: Publish Test Artifact
      uses: actions/upload-artifact@v2
      with:
        path: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/
        name: CodeCoverageMacOS
  Test_Stage_Code_Coverage:
    name: Publish Code Coverage
    runs-on: ubuntu-latest
    needs:
    - Build_Stage_Package_Module
    - Test_Stage_test_macos
    - Test_Stage_test_linux
    - Test_Stage_test_windows_core
    - Test_Stage_test_windows_ps
    steps:
    - uses: actions/checkout@v2
    - name: Set Environment Variables
      run: |
        $repositoryOwner,$repositoryName = $env:BUILD_REPOSITORY_NAME -split '/'
        echo "##vso[task.setvariable variable=RepositoryOwner;isOutput=true]$repositoryOwner"
        echo "##vso[task.setvariable variable=RepositoryName;isOutput=true]$repositoryName"
      shell: pwsh
    - name: Download Pipeline Artifact
      uses: actions/download-artifact@v2
    - name: Download Test Artifact macOS
      uses: actions/download-artifact@v2
    - name: Download Test Artifact Linux
      uses: actions/download-artifact@v2
    - name: Download Test Artifact Windows (PS 5.1)
      uses: actions/download-artifact@v2
    - name: Download Test Artifact Windows (PS7)
      uses: actions/download-artifact@v2
  Deploy_Stage_Deploy_Module:
    name: Deploy Module
    runs-on: ubuntu-latest
    needs:
    - Test_Stage_test_linux
    - Test_Stage_test_windows_core
    - Test_Stage_test_windows_ps
    - Test_Stage_test_macos
    - Test_Stage_Code_Coverage
    if: success() && (github.ref == 'refs/heads/main')
    steps:
    - uses: actions/checkout@v2
    - name: Download Build Artifact
      uses: actions/download-artifact@v2
    - name: Publish Release
      shell: pwsh
      run: |
        ./build.ps1 -tasks publish
      env:
        GitHubToken: ${{ env.GitHubToken }}
        GalleryApiToken: ${{ env.GalleryApiToken }}
    - name: Send Changelog PR
      shell: pwsh
      run: |
        ./build.ps1 -tasks Create_ChangeLog_GitHub_PR
      env:
        GitHubToken: ${{ env.GitHubToken }}
                    
